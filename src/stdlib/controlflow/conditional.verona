// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
using "boolean";

class FalseBranch {}

if[T](cond: ()->Bool): (()->T)->(T | FalseBranch)
{
  match cond()
  {
    { true => { ontrue => ontrue() } }
    { false => { ontrue => FalseBranch } }
  }
}

// TODO: `prev` is captured in the return value
elseif[T, U](prev: T | FalseBranch, cond: ()->Bool):
  (()->U)->(T | U | FalseBranch)
{
  match prev
  {
    { (FalseBranch) =>
      match cond()
      {
        { true => { ontrue => ontrue() } }
        { false => { ontrue => FalseBranch } }
      }
    }
    { v: T => { ontrue => v } }
  }
}

else[T, U](prev: T | FalseBranch, onfalse: ()->U): T | U
{
  match prev
  {
    { (FalseBranch) => onfalse() }
    { v: T => v }
  }
}
