(class
  ()
  []
  ()
  [
    (class
      $module-0
      []
      ()
      [
        (class U64 [] () [])
        (function
          foo
          (lambda
            [
              (typeparam N (imm ) ())
              (typeparam
                R
                (isecttype [ (typeref [ (typename U64 []) ]) (imm ) ])
                ())
            ]
            [
              (param a (typeref [ (typename N []) ]) ())
              (param
                b
                (isecttype [ (typeref [ (typename U64 []) ]) (imm ) ])
                ())
            ]
            (typeref [ (typename R []) ])
            [
              (let x)
              (let $0)
              (assign (ref $0) (select (ref a) [ (typename + []) ] (ref b)))
              (assign (ref x) (ref $0))
              (let r)
              (oftype (ref r) (typeref [ (typename R []) ]))
              (assign (ref r) (ref x))
              (ref x)
            ]))
        (function apply (lambda [] [] () []))
      ])
  ])
